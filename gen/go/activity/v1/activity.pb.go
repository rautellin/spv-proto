// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: activity/v1/activity.proto

package proto

import (
	_go "github.com/rautellin/spv-proto/gen/go"
	v11 "github.com/rautellin/spv-proto/gen/go/assignment/v1"
	v1 "github.com/rautellin/spv-proto/gen/go/profile/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityType int32

const (
	ActivityType_ACTIVITY_TYPE_UNSPECIFIED                 ActivityType = 0
	ActivityType_ACTIVITY_TYPE_TIME_REPORT_CREATED         ActivityType = 1
	ActivityType_ACTIVITY_TYPE_TIME_REPORT_UPDATED         ActivityType = 2
	ActivityType_ACTIVITY_TYPE_TIME_REPORT_DELETED         ActivityType = 3
	ActivityType_ACTIVITY_TYPE_ASSIGNMENT_ASSIGNED         ActivityType = 4
	ActivityType_ACTIVITY_TYPE_ASSIGNMENT_UNASSIGNED       ActivityType = 5
	ActivityType_ACTIVITY_TYPE_ASSIGNMENT_DELETED          ActivityType = 6
	ActivityType_ACTIVITY_TYPE_ASSIGNMENT_UPDATED          ActivityType = 7
	ActivityType_ACTIVITY_TYPE_ASSIGNMENT_READY_FOR_REVIEW ActivityType = 8
)

// Enum value maps for ActivityType.
var (
	ActivityType_name = map[int32]string{
		0: "ACTIVITY_TYPE_UNSPECIFIED",
		1: "ACTIVITY_TYPE_TIME_REPORT_CREATED",
		2: "ACTIVITY_TYPE_TIME_REPORT_UPDATED",
		3: "ACTIVITY_TYPE_TIME_REPORT_DELETED",
		4: "ACTIVITY_TYPE_ASSIGNMENT_ASSIGNED",
		5: "ACTIVITY_TYPE_ASSIGNMENT_UNASSIGNED",
		6: "ACTIVITY_TYPE_ASSIGNMENT_DELETED",
		7: "ACTIVITY_TYPE_ASSIGNMENT_UPDATED",
		8: "ACTIVITY_TYPE_ASSIGNMENT_READY_FOR_REVIEW",
	}
	ActivityType_value = map[string]int32{
		"ACTIVITY_TYPE_UNSPECIFIED":                 0,
		"ACTIVITY_TYPE_TIME_REPORT_CREATED":         1,
		"ACTIVITY_TYPE_TIME_REPORT_UPDATED":         2,
		"ACTIVITY_TYPE_TIME_REPORT_DELETED":         3,
		"ACTIVITY_TYPE_ASSIGNMENT_ASSIGNED":         4,
		"ACTIVITY_TYPE_ASSIGNMENT_UNASSIGNED":       5,
		"ACTIVITY_TYPE_ASSIGNMENT_DELETED":          6,
		"ACTIVITY_TYPE_ASSIGNMENT_UPDATED":          7,
		"ACTIVITY_TYPE_ASSIGNMENT_READY_FOR_REVIEW": 8,
	}
)

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}

func (x ActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_activity_v1_activity_proto_enumTypes[0].Descriptor()
}

func (ActivityType) Type() protoreflect.EnumType {
	return &file_activity_v1_activity_proto_enumTypes[0]
}

func (x ActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityType.Descriptor instead.
func (ActivityType) EnumDescriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{0}
}

type GetActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetActivitiesRequest) Reset() {
	*x = GetActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivitiesRequest) ProtoMessage() {}

func (x *GetActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivitiesRequest.ProtoReflect.Descriptor instead.
func (*GetActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{0}
}

type GetActivitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*ActivityModel `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
}

func (x *GetActivitiesResponse) Reset() {
	*x = GetActivitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivitiesResponse) ProtoMessage() {}

func (x *GetActivitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivitiesResponse.ProtoReflect.Descriptor instead.
func (*GetActivitiesResponse) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{1}
}

func (x *GetActivitiesResponse) GetActivities() []*ActivityModel {
	if x != nil {
		return x.Activities
	}
	return nil
}

type MarkActivitiesAsReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityIds []string `protobuf:"bytes,1,rep,name=activity_ids,json=activityIds,proto3" json:"activity_ids,omitempty"`
}

func (x *MarkActivitiesAsReadRequest) Reset() {
	*x = MarkActivitiesAsReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkActivitiesAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkActivitiesAsReadRequest) ProtoMessage() {}

func (x *MarkActivitiesAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkActivitiesAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkActivitiesAsReadRequest) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{2}
}

func (x *MarkActivitiesAsReadRequest) GetActivityIds() []string {
	if x != nil {
		return x.ActivityIds
	}
	return nil
}

type MarkActivitiesAsReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkActivitiesAsReadResponse) Reset() {
	*x = MarkActivitiesAsReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkActivitiesAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkActivitiesAsReadResponse) ProtoMessage() {}

func (x *MarkActivitiesAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkActivitiesAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkActivitiesAsReadResponse) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{3}
}

type GetUnreadActivitiesCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUnreadActivitiesCountRequest) Reset() {
	*x = GetUnreadActivitiesCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnreadActivitiesCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadActivitiesCountRequest) ProtoMessage() {}

func (x *GetUnreadActivitiesCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadActivitiesCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadActivitiesCountRequest) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{4}
}

type GetUnreadActivitiesCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetUnreadActivitiesCountResponse) Reset() {
	*x = GetUnreadActivitiesCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnreadActivitiesCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadActivitiesCountResponse) ProtoMessage() {}

func (x *GetUnreadActivitiesCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadActivitiesCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadActivitiesCountResponse) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{5}
}

func (x *GetUnreadActivitiesCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ActivityModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy      *v1.ProfileModel       `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	IsAcknowledged bool                   `protobuf:"varint,4,opt,name=is_acknowledged,json=isAcknowledged,proto3" json:"is_acknowledged,omitempty"`
	IsRead         bool                   `protobuf:"varint,5,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Type           ActivityType           `protobuf:"varint,6,opt,name=type,proto3,enum=activity.v1.ActivityType" json:"type,omitempty"`
	// Types that are assignable to Activity:
	//
	//	*ActivityModel_TimeReport
	//	*ActivityModel_Assignment
	Activity isActivityModel_Activity `protobuf_oneof:"activity"`
}

func (x *ActivityModel) Reset() {
	*x = ActivityModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_activity_v1_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityModel) ProtoMessage() {}

func (x *ActivityModel) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityModel.ProtoReflect.Descriptor instead.
func (*ActivityModel) Descriptor() ([]byte, []int) {
	return file_activity_v1_activity_proto_rawDescGZIP(), []int{6}
}

func (x *ActivityModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivityModel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityModel) GetCreatedBy() *v1.ProfileModel {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *ActivityModel) GetIsAcknowledged() bool {
	if x != nil {
		return x.IsAcknowledged
	}
	return false
}

func (x *ActivityModel) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *ActivityModel) GetType() ActivityType {
	if x != nil {
		return x.Type
	}
	return ActivityType_ACTIVITY_TYPE_UNSPECIFIED
}

func (m *ActivityModel) GetActivity() isActivityModel_Activity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (x *ActivityModel) GetTimeReport() *_go.TimeReportModel {
	if x, ok := x.GetActivity().(*ActivityModel_TimeReport); ok {
		return x.TimeReport
	}
	return nil
}

func (x *ActivityModel) GetAssignment() *v11.AssignmentModel {
	if x, ok := x.GetActivity().(*ActivityModel_Assignment); ok {
		return x.Assignment
	}
	return nil
}

type isActivityModel_Activity interface {
	isActivityModel_Activity()
}

type ActivityModel_TimeReport struct {
	TimeReport *_go.TimeReportModel `protobuf:"bytes,7,opt,name=time_report,json=timeReport,proto3,oneof"`
}

type ActivityModel_Assignment struct {
	Assignment *v11.AssignmentModel `protobuf:"bytes,8,opt,name=assignment,proto3,oneof"`
}

func (*ActivityModel_TimeReport) isActivityModel_Activity() {}

func (*ActivityModel_Assignment) isActivityModel_Activity() {}

var File_activity_v1_activity_proto protoreflect.FileDescriptor

var file_activity_v1_activity_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x1b, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x37, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x48,
	0x00, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x40, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x0a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2a, 0xed, 0x02, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x25, 0x0a, 0x21, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x53, 0x53,
	0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x24, 0x0a, 0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x2d, 0x0a, 0x29,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53,
	0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x46,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x08, 0x32, 0xcf, 0x02, 0x0a, 0x0f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x56, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x21, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x28, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x75, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x2f, 0x73, 0x70, 0x76, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activity_v1_activity_proto_rawDescOnce sync.Once
	file_activity_v1_activity_proto_rawDescData = file_activity_v1_activity_proto_rawDesc
)

func file_activity_v1_activity_proto_rawDescGZIP() []byte {
	file_activity_v1_activity_proto_rawDescOnce.Do(func() {
		file_activity_v1_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_activity_v1_activity_proto_rawDescData)
	})
	return file_activity_v1_activity_proto_rawDescData
}

var file_activity_v1_activity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_activity_v1_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_activity_v1_activity_proto_goTypes = []interface{}{
	(ActivityType)(0),                        // 0: activity.v1.ActivityType
	(*GetActivitiesRequest)(nil),             // 1: activity.v1.GetActivitiesRequest
	(*GetActivitiesResponse)(nil),            // 2: activity.v1.GetActivitiesResponse
	(*MarkActivitiesAsReadRequest)(nil),      // 3: activity.v1.MarkActivitiesAsReadRequest
	(*MarkActivitiesAsReadResponse)(nil),     // 4: activity.v1.MarkActivitiesAsReadResponse
	(*GetUnreadActivitiesCountRequest)(nil),  // 5: activity.v1.GetUnreadActivitiesCountRequest
	(*GetUnreadActivitiesCountResponse)(nil), // 6: activity.v1.GetUnreadActivitiesCountResponse
	(*ActivityModel)(nil),                    // 7: activity.v1.ActivityModel
	(*timestamppb.Timestamp)(nil),            // 8: google.protobuf.Timestamp
	(*v1.ProfileModel)(nil),                  // 9: profile.v1.ProfileModel
	(*_go.TimeReportModel)(nil),              // 10: time_report.v1.TimeReportModel
	(*v11.AssignmentModel)(nil),              // 11: assignment.v1.AssignmentModel
}
var file_activity_v1_activity_proto_depIdxs = []int32{
	7,  // 0: activity.v1.GetActivitiesResponse.activities:type_name -> activity.v1.ActivityModel
	8,  // 1: activity.v1.ActivityModel.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: activity.v1.ActivityModel.created_by:type_name -> profile.v1.ProfileModel
	0,  // 3: activity.v1.ActivityModel.type:type_name -> activity.v1.ActivityType
	10, // 4: activity.v1.ActivityModel.time_report:type_name -> time_report.v1.TimeReportModel
	11, // 5: activity.v1.ActivityModel.assignment:type_name -> assignment.v1.AssignmentModel
	1,  // 6: activity.v1.ActivityService.GetActivities:input_type -> activity.v1.GetActivitiesRequest
	3,  // 7: activity.v1.ActivityService.MarkActivitiesAsRead:input_type -> activity.v1.MarkActivitiesAsReadRequest
	5,  // 8: activity.v1.ActivityService.GetUnreadActivitiesCount:input_type -> activity.v1.GetUnreadActivitiesCountRequest
	2,  // 9: activity.v1.ActivityService.GetActivities:output_type -> activity.v1.GetActivitiesResponse
	4,  // 10: activity.v1.ActivityService.MarkActivitiesAsRead:output_type -> activity.v1.MarkActivitiesAsReadResponse
	6,  // 11: activity.v1.ActivityService.GetUnreadActivitiesCount:output_type -> activity.v1.GetUnreadActivitiesCountResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_activity_v1_activity_proto_init() }
func file_activity_v1_activity_proto_init() {
	if File_activity_v1_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_activity_v1_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkActivitiesAsReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkActivitiesAsReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnreadActivitiesCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnreadActivitiesCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_activity_v1_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_activity_v1_activity_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ActivityModel_TimeReport)(nil),
		(*ActivityModel_Assignment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activity_v1_activity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_activity_v1_activity_proto_goTypes,
		DependencyIndexes: file_activity_v1_activity_proto_depIdxs,
		EnumInfos:         file_activity_v1_activity_proto_enumTypes,
		MessageInfos:      file_activity_v1_activity_proto_msgTypes,
	}.Build()
	File_activity_v1_activity_proto = out.File
	file_activity_v1_activity_proto_rawDesc = nil
	file_activity_v1_activity_proto_goTypes = nil
	file_activity_v1_activity_proto_depIdxs = nil
}
